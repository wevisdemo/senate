/* Qwik Service Worker */
const appBundles=[["q-01515e98.js",[26,33,41],["06SslG70bZo"]],["q-07f1a0d3.js",[26]],["q-08825c9c.js",[26,31,33,41],["3Mz20Qk84hg"]],["q-0ee514bf.js",[38]],["q-120500ad.js",[3,26,27,30,38,41],["0uPukBVxx1U","USvbBCyITnQ"]],["q-1aad462e.js",[3,26,27,30,38,41],["qmd7Z4k2uIU","sdTagn8R0yw","Wmlbm8i0bL8"]],["q-1c5d4d96.js",[41]],["q-1d05b7a0.js",[3,27,38,41],["BrSOwlW4fyM","g5lP60Ekm0g","PROWAbZ7uiw"]],["q-20663fd7.js",[3,15,38,41],["1hWqXw50tx4","4iKEAlrWuEY","m0WlHFwv1uY"]],["q-2e06b344.js",[3,27,38,41],["0vHSIa1k90I","5DkaON6b1ms","kcOGUtwwHXQ"]],["q-2ed992b5.js",[38,41],["H9pmNoSBuKI","XtWms2Jk7x4"]],["q-31b90b21.js",[3,15,26,27,30,38,41],["30T2B7deCus","M8EYOpffTVc"]],["q-3436b466.js",[41],["i5ZL09b3emg"]],["q-3ac9bc61.js",[26,30,41],["bcsqMmq34wA"]],["q-45aab3b6.js",[]],["q-4b8363ab.js",[]],["q-52ba5527.js",[26,41]],["q-533b81ab.js",[1,26,33,41],["B10cFaXfvFc"]],["q-54192151.js",[38,41],["ctzgtRXsI8E","woOL2wWADmk"]],["q-59738ba4.js",[41],["f1zQoEscqbs"]],["q-62cd3b5c.js",[26,38,41],["4K9D0Wrs7JE","DKxUXpbhfow","RNdDKmlRQzk"]],["q-6e2e95bb.js",[3,27,38,41],["dy0G4tGFKUA","mb0CK0SnseQ"]],["q-748c4de8.js",[41],["6LYztwGzxAA"]],["q-7c1a3fb4.js",[41],["8eVg8MyNURk","9TFxkfCfVOI"]],["q-806731ce.js",[38,41],["AKm0q40kLHs","hTwv5CADAcU","J0O64Q0VesE"]],["q-817a90aa.js",[19,41],["AKetNByE5TM","KnNE9eL0qfc"]],["q-8241c1d6.js",[41]],["q-85974b4d.js",[3,38]],["q-8bf83684.js",[26,41],["EWIT9ENzUX0","hkT84xKSMLE","zH94hIe0Ick"]],["q-93a664ee.js",[1,26,33,41],["53LfLGTry0M"]],["q-94b80d03.js",[26,41]],["q-9a70204c.js",[26]],["q-9b19cd3f.js",[19,41],["lZL5rgk0N0w"]],["q-acf3af51.js",[26]],["q-b3ccdbbb.js",[19,41],["02wMImzEAbk","fX0bDjeJa0E","TxCFOy819ag"]],["q-ba4a8f85.js",[26,33,41],["MrnsGvtaZL4"]],["q-c7e763e4.js",[19,26,41],["FiH2jvy0DEA"]],["q-d206d541.js",[38,41],["AhDhuzKH1Pg","glT5dow2VvQ"]],["q-d5377a27.js",[]],["q-df56c9fd.js",[3,26,27,30,38,41],["djGQeWR7NQk","r7HT9T9Ex9s"]],["q-df9a84d2.js",[41]],["q-e35b735b.js",[]],["q-e86cf4f3.js",[26,31,33,41],["M0meepMhOPs"]],["q-edc78638.js",[41]],["q-f31fdf37.js",[26,41],["fOCFtoC9d5A"]]];
const libraryBundleIds=[34];
const linkBundles=[[/^\/senate\/$/,[6,44,30,4,5,7,8,9,10,11,12,13,18,20,21,23,24,37,39,42]],[/^\/senate\/about\/?$/,[6,44,16,2]]];
const m="QwikBuild",k=new Set,g=new Map,u=[],E=(e,n)=>n.filter(s=>!e.some(i=>s.endsWith(i[0]))),q=(e,n)=>!!n&&!v(e)&&!v(n),v=e=>{const n=e.headers.get("Cache-Control")||"";return n.includes("no-cache")||n.includes("max-age=0")},C=(e,n)=>e.some(s=>n.endsWith("/"+s[0])),U=(e,n)=>e.find(s=>s[0]===n),b=(e,n)=>n.map(s=>e[s]?e[s][0]:null),W=(e,n)=>n.map(s=>e.get(s)).filter(s=>s!=null),p=e=>{const n=new Map;for(const s of e){const i=s[2];if(i)for(const c of i)n.set(c,s[0])}return n},A=(e,n,s,i)=>new Promise((c,h)=>{const t=i.url,r=s.get(t);if(r)r.push([c,h]);else{const o=l=>{const a=s.get(t);if(a){s.delete(t);for(const[d]of a)d(l.clone())}else c(l.clone())},f=l=>{const a=s.get(t);if(a){s.delete(t);for(const[d,L]of a)L(l)}else h(l)};s.set(t,[[c,h]]),e.match(t).then(l=>{if(q(i,l))o(l);else return n(i).then(async a=>{a.ok&&await e.put(t,a.clone()),o(a)})}).catch(l=>e.match(t).then(a=>{a?o(a):f(l)}))}}),y=(e,n,s,i,c,h=!1)=>{const t=()=>{for(;u.length>0&&g.size<6;){const o=u.shift(),f=new Request(o);k.has(o)?t():(k.add(o),A(n,s,g,f).finally(t))}},r=o=>{try{const f=U(e,o);if(f){const l=b(e,f[1]),a=new URL(o,i).href,d=u.indexOf(a);d>-1?h&&(u.splice(d,1),u.unshift(a)):h?u.unshift(a):u.push(a),l.forEach(r)}}catch(f){console.error(f)}};Array.isArray(c)&&c.forEach(r),t()},w=(e,n,s,i,c,h,t)=>{try{y(e,i,c,h,b(e,n))}catch(r){console.error(r)}for(const r of t)try{for(const o of s){const[f,l]=o;if(f.test(r)){y(e,i,c,h,b(e,l));break}}}catch(o){console.error(o)}},B=(e,n,s,i)=>{try{const c=i.href.split("/"),h=c[c.length-1];c[c.length-1]="";const t=new URL(c.join("/"));y(e,n,s,t,[h],!0)}catch(c){console.error(c)}},N=(e,n,s,i)=>{const c=e.fetch.bind(e),h=p(n);e.addEventListener("fetch",t=>{const r=t.request;if(r.method==="GET"){const o=new URL(r.url);C(n,o.pathname)&&t.respondWith(e.caches.open(m).then(f=>(B(n,f,c,o),A(f,c,g,r))))}}),e.addEventListener("message",async({data:t})=>{if(t.type==="qprefetch"&&typeof t.base=="string"){const r=await e.caches.open(m),o=new URL(t.base,e.origin);Array.isArray(t.links)&&w(n,s,i,r,c,o,t.links),Array.isArray(t.bundles)&&y(n,r,c,o,t.bundles),Array.isArray(t.symbols)&&y(n,r,c,o,W(h,t.symbols))}}),e.addEventListener("activate",async()=>{try{const t=await e.caches.open(m),o=(await t.keys()).map(l=>l.url),f=E(n,o);await Promise.all(f.map(l=>t.delete(l)))}catch(t){console.error(t)}})},x=()=>{typeof self<"u"&&typeof appBundles<"u"&&N(self,appBundles,libraryBundleIds,linkBundles)};x();addEventListener("install",()=>self.skipWaiting());addEventListener("activate",()=>self.clients.claim());
